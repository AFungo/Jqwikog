static isSnapshotRelease(versionString) {
	versionString.endsWith('SNAPSHOT')
}

ext {
	junitPlatformVersion = '1.5.2'
	junitJupiterVersion = '5.5.2'
	apiGuardianVersion = '1.1.0'
	opentest4jVersion = '1.2.0'
	archunitVersion = '0.11.0'
	assertJVersion = '3.13.2'
	mockitoVersion = '3.1.0'
	moduleName = 'net.jqwik'
	jqwikVersion = '1.2.3-SNAPSHOT'
	isSnapshotRelease = isSnapshotRelease(jqwikVersion)
}

allprojects {
	repositories {
		mavenCentral()
		//maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	}

	group = moduleName
	version = jqwikVersion

	apply plugin: 'java-library'
	apply plugin: 'maven-publish'
	apply plugin: 'signing'

	task javadocJar(type: Jar) {
		classifier = 'javadoc'
		from javadoc
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	tasks['publish'].dependsOn(build)

	publishing {
		repositories {
			maven {
				def ossrhUsername = project.hasProperty('ossrhUsername') ? project.ossrhUsername : ''
				def ossrhPassword = project.hasProperty('ossrhPassword') ? project.ossrhPassword : ''

				credentials {
					username = ossrhUsername
					password = ossrhPassword
				}

				// change URLs to point to your repos, e.g. http://my.org/repo
				def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
				def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
				url = isSnapshotRelease ? snapshotsRepoUrl : releasesRepoUrl
			}
		}
	}

	java {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}

	compileTestJava {
		options.compilerArgs += '-parameters'
		options.encoding = 'UTF-8'
	}

	dependencies {
		api("org.apiguardian:apiguardian-api:${apiGuardianVersion}")
	}

}

wrapper {
	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '5.6.4'
}

